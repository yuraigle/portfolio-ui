<template>
  <div id="chart-element" style="height: 500px"></div>
</template>

<script>
import * as d3 from 'd3';
import * as fc from 'd3fc';

const lineSeries = fc
  .seriesSvgLine()
  .mainValue((d) => d.high)
  .crossValue((d) => d.date);

const xExtent = fc.extentDate().accessors([(d) => d.date]);
const yExtent = fc
  .extentLinear()
  .pad([0.1, 0.1])
  .accessors([(d) => d.high, (d) => d.low]);

export default {
  props: {
    data: Array,
  },

  methods: {
    chartLegend() {
      const labelJoin = fc.dataJoin('text', 'legend-label');
      const valueJoin = fc.dataJoin('text', 'legend-value');

      const instance = (selection) => {
        selection.each((data, selectionIndex, nodes) => {
          labelJoin(d3.select(nodes[selectionIndex]), data)
            .attr('transform', (_, i) => 'translate(50, ' + (i + 1) * 15 + ')')
            .text((d) => d.name);

          valueJoin(d3.select(nodes[selectionIndex]), data)
            .attr('transform', (_, i) => 'translate(60, ' + (i + 1) * 15 + ')')
            .text((d) => d.value);
        });
      };

      return instance;
    },
  },

  watch: {
    data(newData) {
      console.log(newData);

      if (newData.length === 0) {
        return;
      }

      // const dateFormat = d3.timeFormat('%a %H:%M%p');
      const priceFormat = d3.format(',.2f');
      const legendData = (datum) => [
        { name: 'Open', value: priceFormat(datum.open) },
        { name: 'High', value: priceFormat(datum.high) },
        { name: 'Low', value: priceFormat(datum.low) },
        { name: 'Close', value: priceFormat(datum.close) },
        { name: 'Volume', value: priceFormat(datum.volume) },
      ];

      const chart = fc
        .chartCartesian(d3.scaleTime(), d3.scaleLinear())
        .yOrient('right')
        .yDomain(yExtent(newData))
        .xDomain(xExtent(newData))
        .svgPlotArea(lineSeries)
        .decorate((sel) => {
          sel
            .datum(legendData(newData[newData.length - 1]))
            .append('svg')
            .style('grid-column', 3)
            .style('grid-row', 3)
            .classed('legend', true)
            .call(this.chartLegend);
        });

      d3.select('#chart-element').datum(newData).call(chart);
    },
  },
};
</script>
